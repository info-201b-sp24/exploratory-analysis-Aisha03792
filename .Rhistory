foundation_dataset <- data.frame(
time = factor(c("House of Tara","Elsas Pro"),
factor = c("House of Tara","Elsas Pro")),
total_range =
)
# Plotting Bar
ggplot(data = foundation_dataset) +
geom_bar(mapping = aes(
x = shade,
y = shades,
fill = "identification"),
stat = "indentity") +
ggtitle("Revenue When Shades Options Increase Over The Years")
foundation_dataset <- read.csv("https://raw.githubusercontent.com/the-pudding/data/master/makeup-shades/shades.csv")
# Plotting Bar
ggplot(data = foundation_dataset) +
geom_bar(mapping = aes(
x = shade,
y = shades,
fill = "identification"),
stat = "indentity") +
ggtitle("Revenue When Shades Options Increase Over The Years")
# Plotting Bar
ggplot(data = foundation_dataset) +
geom_bar(mapping = aes(
x = shade,
y = shades,
fill = "identification"),
stat = "identity") +
ggtitle("Revenue When Shades Options Increase Over The Years")
# Plotting Bar
ggplot(data = foundation_dataset) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("Revenue When Shades Options Increase Over The Years")
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999)
library(ggplot2)
data("midwest", package = "ggplot2")
ls()
dim(midwest)
names(midwest)
str(midwest)
ggplot(midwest, aes(x = area, y = poptotal))
ggplot(midwest, aes(x=area, y = poptotal)) + geom_point()
g1= ggplot(midwest, aes(x=area, y=poptotal)) + geom_point()
#Adjusting the X and Y axis limits
g1 + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
# deletes the points outside
g1= ggplot(midwest, aes(x=area, y=poptotal)) + geom_point()
g1+coord_cartesian(xlim = c(0,0.1), ylim = c(0, 1000000))
g1= ggplot(midwest, aes(x=area, y=poptotal)) + geom_point()
g1+coord_cartesian(xlim = c(0,0.1), ylim = c(0, 1000000))
g1+ labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
g1 + ggtitle("Area Vs Population", subtitle="From midwest dataset") + xlab("Area") + ylab("Population")
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point() +
geom_smooth(method="lm") +
coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(col="blue", size=3) +coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state), size=3) + coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
gg<-ggplot(midwest, aes(x=area, y=poptotal)) +  geom_point(aes(col=state), size=3) + coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
gg+theme(legend.position = "None")
gg + scale_colour_brewer(palette = "Set1")  # change color palette
gg + scale_x_continuous(breaks=seq(0, 0.1, 0.01))
gg + scale_x_continuous(breaks=seq(0, 0.1, 0.01), labels = letters[1:11])
gg <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
xlim(c(0, 0.1)) + ylim(c(0, 500000)) +
labs(title="Area Vs Population", y="Population", x="Area", caption="Source: midwest")
gg
gg <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
geom_smooth(method="loess", se=F) + xlim(c(0, 0.1)) + ylim(c(0, 500000)) +
labs(title="Area Vs Population", y="Population", x="Area", caption="Source: midwest")
gg + labs(color="State", size="Density")   # modify legend title
# Base Plot
gg <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
geom_smooth(method="loess", se=F) + xlim(c(0, 0.1)) + ylim(c(0, 500000)) +
labs(title="Area Vs Population", y="Population", x="Area", caption="Source: midwest")
gg <- gg + guides(color=guide_legend("State"), size=guide_legend("Density"))  # modify legend title
plot(gg)
gg <- ggplot(midwest, aes(x=area, y=poptotal)) + geom_point(aes(col=state, size=popdensity)) + xlim(c(0,0.1))+ylim(c(0,500000)) + labs(title="Area Vs Population", y="Population", x="Area", caption="Source: midwest")
gg + guides(colour = guide_legend(order = 1),size = guide_legend(order = 2))
# Stacked bar graph -- this is probably not what you want
ggplot(data=dat1, aes(x=time, y=total_bill, fill=sex)) + geom_bar(stat="identity")
# Plotting Bar
ggplot(data = foundation_dataset) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("Revenue When Shades Options Increase Over The Years")
# Plotting Bar
ggplot(data = foundation_dataset) +
geom_bar(mapping = aes(
x = product,
y = brand$ElsasPro,
fill = "identification"),
stat = "identity") +
ggtitle("Revenue When Shades Options Increase Over The Years")
# Plotting Bar
ggplot(data = foundation_dataset) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("Revenue When Shades Options Increase Over The Years")
filtered_data <- subset(foundation_dataset, brand %>% c("House of Tara", "Elsas Pro"))
# Plotting Bar
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("Revenue When Shades Options Increase Over The Years")
filtered_data <- subset(foundation_dataset, brand %>% c("House of Tara", "Elsas Pro"))
filtered_data <- subset(foundation_dataset, brand %in% c("House of Tara", "Elsas Pro"))
# Plotting Bar
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("Revenue When Shades Options Increase Over The Years")
filtered_data <- subset(foundation_dataset, brand %in% c("House of Tara", "Estée Lauder"))
# Plotting Bar
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("Revenue When Shades Options Increase Over The Years")
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("Nigerain Based .Vs. American Based")
View(foundation_dataset)
filtered_data <- subset(foundation_dataset, brand %in% c("Fenty", "L'Oréal"))
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("White owned .VS. Fenty")
filtered_data <- subset(foundation_dataset, brand %in% c("Fenty", "L'Oréal", "Covergirl + Olay"))
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("White owned .VS. Fenty")
filtered_data <- subset(foundation_dataset, brand %in% c("Fenty","Covergirl + Olay"))
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("White owned .VS. Fenty")
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("White owned .VS. Fenty")
filtered_data <- subset(foundation_dataset, brand %in% c("Fenty", "L'Oréal", "Covergirl + Olay"))
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("White owned .VS. Fenty")
filtered_data <- subset(foundation_dataset, brand %in% c("Fenty", "L'Oréal"))
library(ggplot2)
foundation_dataset <- read.csv("/Users/aditimanjunath/Desktop/data.csv")
filtered_values <- subset(foundation_dataset, brand %in% c("Black Up", "Beauty Bakerie", "Laws of Nature", "Iman", "Fenty"))
ggplot(data = filtered_values) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("Indian Based .Vs. American Based")
filtered_data <- subset(foundation_dataset, brand %in% c("Fenty", "L'Oréal"))
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("White owned .VS. Fenty")
View(filtered_data)
View(filtered_values)
filtered_data <- subset(foundation_dataset, brand %in% c("Fenty", "L'Oréal", "s"))
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("White owned .VS. Fenty")
filtered_data <- subset(foundation_dataset, brand %in% c("Fenty", "L'Oréal", "S"))
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("White owned .VS. Fenty")
View(foundation_dataset)
filtered_data <- subset(foundation_dataset,s, brand %in% c("Fenty", "Mac"))
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "identification"),
stat = "identity") +
ggtitle("White owned .VS. Fenty")
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = s,
fill = Brands),
stat = "identity") +
ggtitle("White owned .VS. Fenty")
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "Brands"),
stat = "identity") +
ggtitle("White owned .VS. Fenty")
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "Brands"),
stat = "identity") +
ggtitle("Fenty .Vs. Mac: Saturation levels indiference!")
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
Brands = "Fenty"),
stat = "identity") +
ggtitle("Fenty .Vs. Mac: Saturation levels indiference!")
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "Fenty"),
stat = "identity") +
ggtitle("Fenty .Vs. Mac: Saturation levels indiference!")
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "Fenty", "Mac"),
stat = "identity") +
ggtitle("Fenty .Vs. Mac: Saturation levels indiference!")
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "Fenty", "Mac"),
position = "dodge") +
ggtitle("Fenty .Vs. Mac: Saturation levels indiference!")
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999)
g1= ggplot(midwest, aes(x=area, y=poptotal)) + geom_point()
g1+coord_cartesian(xlim = c(0,0.1), ylim = c(0, 1000000))
g1+ labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
df1 <- data.frame(
time = factor(c("Lunch","Dinner"), levels=c("Lunch","Dinner")),
total_bill = c(14.89, 17.23)
)
df1
# Very basic bar graph
ggplot(data=df1, aes(x=time, y=total_bill)) +
geom_bar(stat="identity")
# Map the time of day to different fill colors
ggplot(data=df1, aes(x=time, y=total_bill, fill=time)) +
geom_bar(stat="identity")
# Add a black outline
ggplot(data=df1, aes(x=time, y=total_bill, fill=time)) +
geom_bar(colour="black", stat="identity")
# No legend, since the information is redundant
ggplot(data=df1, aes(x=time, y=total_bill, fill=time)) +geom_bar(colour="black", stat="identity") +guides(fill=FALSE)
# Bar graph of counts
ggplot(data=tips, aes(x=day)) +
geom_bar(stat="count")
## Equivalent to this, since stat="bin" is the default:
# ggplot(data=tips, aes(x=day)) +
#    geom_bar()
# Stacked bar graph -- this is probably not what you want
ggplot(data=dat1, aes(x=time, y=total_bill, fill=sex)) + geom_bar(stat="identity")
# Stacked bar graph -- this is probably not what you want
ggplot(data=dat1, aes(x=time, y=total_bill, fill=sex)) + geom_bar(stat="identity")
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "Fenty", "Mac"),
stat = "identity") +
ggtitle("Fenty .Vs. Mac: Saturation levels indiference!")
# Bar graph
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = brand,
fill = "Fenty"),
stat = "identity") +
ggtitle("Fenty .Vs. Mac: Saturation levels indiference!")
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = saturation,
fill = brand),
stat = "identity",
position = "dodge") +
ggtitle("Fenty vs. Mac: Saturation levels difference")
ggplot(data = filtered_data) +
geom_bar(mapping = aes(
x = product,
y = s,
fill = brand),
stat = "identity",
position = "dodge") +
ggtitle("Fenty vs. Mac: Saturation levels difference")
foundation_dataset <- read.csv("https://raw.githubusercontent.com/the-pudding/data/master/makeup-shades/shades.csv")
View(filtered_values)
ggplot(data = filtered_data, S) +
geom_bar(mapping = aes(
x = product,
y = s,
fill = brand),
stat = "identity",
position = "dodge") +
ggtitle("Fenty vs. Mac: Saturation levels difference")
ggplot(data = filtered_data, ) +
geom_bar(mapping = aes(
x = product,
y = s,
fill = brand),
stat = "identity",
position = "dodge") +
ggtitle("Fenty vs. Mac: Saturation levels difference")
# Filter data for Fenty and Mac
filtered_data <- subset(foundation_dataset, brand %in% c("Fenty", "Mac"))
# Bar graph comparing saturation levels
ggplot(data = filtered_data, aes(x = product, y = saturation, fill = brand)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Fenty vs. Mac: Saturation Levels Difference")
# Bar graph comparing saturation levels with labels
ggplot(data = filtered_data, aes(x = product, y = saturation, fill = brand)) +
geom_bar(stat = "identity", position = "dodge") +
labs(y = "Saturation Levels", x = "Product", fill = "Brand") +
ggtitle("Fenty vs. Mac: Saturation Levels Difference")
# Bar graph comparing saturation levels with labels
ggplot(data = filtered_data, aes(x = product, y = S, fill = brand)) +
geom_bar(stat = "identity", position = "dodge") +
labs(y = "Saturation Levels", x = "Product", fill = "Brand") +
ggtitle("Fenty vs. Mac: Saturation Levels Difference")
# Bar graph comparing saturation levels with labels
ggplot(data = filtered_data, aes(x = filtered_data, y = S, fill = brand)) +
geom_bar(stat = "identity", position = "dodge") +
labs(y = "Saturation Levels", x = "Product", fill = "Brand") +
ggtitle("Fenty vs. Mac: Saturation Levels Difference")
# Bar graph comparing saturation levels with labels
ggplot(data = filtered_data, aes(x = product, y = S, fill = brand)) +
geom_bar(stat = "identity", position = "dodge") +
labs(y = "Saturation Levels", x = "Product", fill = "Brand") +
ggtitle("Fenty vs. Mac: Saturation Levels Difference")
ggplot(data = filtered_data, aes(x = product, y = S, fill = brand)) +
geom_bar(stat = "identity", position = "dodge") +
labs(y = "Saturation Levels", x = "Products", fill = "Brands") +
ggtitle("Fenty vs. Mac: Saturation Levels Difference")
# Bar graph
ggplot(data = filtered_data, aes(x = Product, y = S, fill = brand)) +
geom_bar(stat = "identity", position = "dodge") +
labs(y = "Saturation Levels", x = "Brands", fill = "Brands") +
ggtitle("Fenty vs. Mac: Saturation Level Differences")
# Bar graph
ggplot(data = filtered_data, aes(x = product, y = S, fill = brand)) +
geom_bar(stat = "identity", position = "dodge") +
labs(y = "Saturation Levels", x = "Brands", fill = "Brands") +
ggtitle("Fenty vs. Mac: Saturation Level Differences")
ggplot(data = filtered_data, aes(
x = product,
y = S,
fill = brand)) +
geom_bar(stat = "identity",
position = "dodge") +
labs(y = "Saturation Levels",
x = "Brands",
fill = "Brands") +
ggtitle("Fenty vs. Mac: Saturation Level Differences")
ggplot(data = filtered_data, aes(
x = product,
y = S,
fill = brand)) +
geom_bar(stat = "identity",position = "dodge") +
labs(y = "Saturation Levels", x = "Brands", fill = "Brands") +
ggtitle("Fenty vs. Mac: Saturation Level Differences")
filtered_data$product_brand <- paste(filtered_data$brand, filtered_data$product, sep = " - "
filtered_data$product_brand <- paste(filtered_data$brand, filtered_data$product, sep = " - ")
ggplot(data = filtered_data, aes(
x = product,
y = S,
fill = brand)) +
geom_bar(stat = "identity",position = "dodge") +
labs(y = "Saturation Levels", x = "Brands", fill = "Brands") +
ggtitle("Fenty vs. Mac: Saturation Level Differences")
View(filtered_data)
View(filtered_values)
View(df1)
View(filtered_data)
filtered_data <- subset(foundation_dataset, brand %in% c("Fenty" + "Mac"))
View(foundation_dataset)
filtered_data <- subset(foundation_dataset, brand %in% c("Fenty", "MAC"))
ggplot(data = filtered_data, aes(
x = product,
y = S,
fill = brand)) +
geom_bar(stat = "identity",position = "dodge") +
labs(y = "Saturation Levels", x = "Brands", fill = "Brands") +
ggtitle("Fenty vs. Mac: Saturation Level Differences")
View(filtered_data)
ggplot(data = filtered_data, aes(
x = product,
y = S,
fill = brand)) +
geom_bar(colour = "black", stat = "identity",position = "dodge") +
labs(y = "Saturation Levels", x = "Brands", fill = "Brands") +
ggtitle("Fenty vs. Mac: Saturation Level Differences")
ggplot(data = filtered_data, aes(
x = product,
y = S,
fill = brand)) +
geom_bar(stat = "identity",position = "dodge", colour = "black") +
labs(y = "Saturation Levels", x = "Brands", fill = "Brands") +
ggtitle("Fenty vs. Mac: Saturation Level Differences")
ggplot(data = filtered_data, aes(
x = product,
y = S,
fill = brand)) +
geom_bar(stat = "identity",position = "dodge", colour = "black") +
labs(y = "Saturation Levels", x = "Brands", fill = "Brands") +
ggtitle("Fenty vs. Mac: Saturation Level Differences")
ggplot(data = filtered_data, aes(
x = product,
y = S,
fill = brand)) +
geom_bar(stat = "identity",position = "dodge", colour = "black") +
guides(fill=FALSE) +
labs(y = "Saturation Levels", x = "Brands", fill = "Brands") +
ggtitle("Fenty vs. Mac: Saturation Level Differences")
ggplot(data = filtered_data, aes(
x = product,
y = S,
fill = brand)) +
geom_bar(stat = "identity",position = "dodge", colour = "black") +
labs(y = "Saturation Levels", x = "Brands", fill = "Brands") +
ggtitle("Fenty vs. Mac: Saturation Level Differences")
ggplot(data = filtered_data, aes(
x = product,
y = S,
fill = brand)) +
geom_bar(stat = "identity",position = "dodge", colour = "black") +
labs(y = "Saturation Levels", x = "Brands", fill = "Brands") +
ggtitle(" Fenty vs. Mac: Saturation Level Differences ")
